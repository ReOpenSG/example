# 제목은 최대 50글자까지 아래에 작성: ex) ✨ [Feat] : Add Key mapping  

# 본문은 아래에 작성  

# 꼬릿말은 아래에 작성: ex) Github issue #23  

# --- COMMIT END ---  
#   <타입> 리스트  
# 🎉 [Init]       : 초기 생성	
# ✨ [Feat]       : 기능 (새로운 기능)
# 🐛 [Fix]        : 버그 (버그 수정)
# 🌈 [Design]     : CSS 등 사용자 UI 디자인 변경
# 🚨 [HOTFIX!]    : 급한 버그 수정(주로 출시버전, D-0 라벨표기)
# ♻️ [Refactor]    : 코드 리팩토링
# 💬 [Comment]    : 필요한 주석 추가 및 변경	
# 🏛️ [Style]      : 스타일 (코드 형식, 세미콜론 추가: 비즈니스 로직X)  
# 📝 [Docs]       : 문서 추가, 수정, 삭제(주로 README)	
# 📱 [Test]       : 테스트 (테스트 코드 추가, 수정, 삭제: 비즈니스 로직X)	
# ⚙️ [Chore]       : 기타 (빌드 스크립트 수정, 패키지 매니저 변경, assets 변경 등)	
# 📂 [Rename]     : 파일 혹은 폴더명 수정 또는 이동 작업	
# ➕ [Add]	  : 파일을 추가하는 작업만 수행한 경우
# ➖ [Remove]	  : 파일을 삭제하는 작업만 수행한 경우 
# 🗑️ [Deprecated] : 더 이상 사용되지 않는 코드나 기능을 제거
# 🛡️ [Security]   : 보안 관련 코드 추가 및 수정
# 🤝 [Merge]      : 팀원들과 동기화 / 충돌 코드 병합
# 🚀 [Deploy]     : 배포 관련
# --------------------
#   [ 기타 타입 ]
# [BREAKING CHANGE] : 커다란 API 변경 (ex: API의 arguments, return 값의 변경, DB 테이블 변경 / 본문에 표시)
# ------------------  
### 제목 - (영문기준) 50자 이내
# 해당 깃모지 [커밋 타입]: [작업 내용]
#   제목은 명령문으로  
#   제목 끝에 마침표(.) 금지  
#   제목과 본문을 한 줄 띄워 분리하기  
# ------------------ 
### 본문 - (영문 기준) 1줄 72자 이내
#   (1)무엇을, (2)어떻게, (2)왜 변경했는지를 설명
#   본문에 여러줄의 메시지를 작성할 땐 "-"로 구분  
# ------------------ 
### 꼬리말
#   Optional. But, 가급적이면 적어줄 것
#   Fixes        : 이슈 수정중 (아직 해결되지 않은 경우)  
#   Resolves     : 이슈 해결했을 때 사용  
#   See also     : 참고할 이슈가 있을 때 사용  
#   Related to   : 해당 커밋에 관련된 이슈번호 (아직 해결되지 않은 경우)  